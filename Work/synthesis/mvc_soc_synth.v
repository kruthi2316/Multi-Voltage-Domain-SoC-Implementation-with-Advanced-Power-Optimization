
// Generated by Cadence Genus(TM) Synthesis Solution 19.13-s073_1
// Generated on: Aug 19 2025 17:43:11 EDT (Aug 19 2025 21:43:11 UTC)

// Verification Directory fv/top_soc 

module always_on_domain(clk_32k, rst_n, sleep_mode, cpu_cmd,
     cpu_status, gpio_in, gpio_out);
  input clk_32k, rst_n, sleep_mode;
  input [7:0] cpu_cmd;
  input [31:0] gpio_in;
  output [7:0] cpu_status;
  output [31:0] gpio_out;
  wire clk_32k, rst_n, sleep_mode;
  wire [7:0] cpu_cmd;
  wire [31:0] gpio_in;
  wire [7:0] cpu_status;
  wire [31:0] gpio_out;
  assign gpio_out[1] = gpio_in[1];
  assign gpio_out[3] = gpio_in[3];
  assign gpio_out[5] = gpio_in[5];
  assign gpio_out[7] = gpio_in[7];
  assign gpio_out[9] = gpio_in[9];
  assign gpio_out[11] = gpio_in[11];
  assign gpio_out[13] = gpio_in[13];
  assign gpio_out[15] = gpio_in[15];
  assign gpio_out[17] = gpio_in[17];
  assign gpio_out[19] = gpio_in[19];
  assign gpio_out[21] = gpio_in[21];
  assign gpio_out[23] = gpio_in[23];
  assign gpio_out[25] = gpio_in[25];
  assign gpio_out[27] = gpio_in[27];
  assign gpio_out[29] = gpio_in[29];
  assign gpio_out[31] = gpio_in[31];
  assign cpu_status[0] = 1'b0;
  assign cpu_status[1] = 1'b0;
  assign cpu_status[2] = 1'b0;
  assign cpu_status[3] = 1'b0;
  assign cpu_status[4] = 1'b0;
  assign cpu_status[5] = 1'b0;
  assign cpu_status[6] = 1'b0;
  assign cpu_status[7] = 1'b0;
  INV_X1 g49(.A (gpio_in[2]), .ZN (gpio_out[2]));
  INV_X1 g50(.A (gpio_in[4]), .ZN (gpio_out[4]));
  INV_X1 g51(.A (gpio_in[6]), .ZN (gpio_out[6]));
  INV_X1 g52(.A (gpio_in[8]), .ZN (gpio_out[8]));
  INV_X1 g53(.A (gpio_in[10]), .ZN (gpio_out[10]));
  INV_X1 g54(.A (gpio_in[12]), .ZN (gpio_out[12]));
  INV_X1 g55(.A (gpio_in[14]), .ZN (gpio_out[14]));
  INV_X1 g56(.A (gpio_in[0]), .ZN (gpio_out[0]));
  INV_X1 g57(.A (gpio_in[18]), .ZN (gpio_out[18]));
  INV_X1 g58(.A (gpio_in[20]), .ZN (gpio_out[20]));
  INV_X1 g59(.A (gpio_in[22]), .ZN (gpio_out[22]));
  INV_X1 g60(.A (gpio_in[24]), .ZN (gpio_out[24]));
  INV_X1 g61(.A (gpio_in[26]), .ZN (gpio_out[26]));
  INV_X1 g62(.A (gpio_in[28]), .ZN (gpio_out[28]));
  INV_X1 g63(.A (gpio_in[30]), .ZN (gpio_out[30]));
  INV_X1 g64(.A (gpio_in[16]), .ZN (gpio_out[16]));
endmodule

module cpu_core(clk, rst_n, enable, data_out, data_out_valid, data_in,
     data_in_valid, ao_cmd, ao_status, mem_addr, mem_wdata, mem_rdata,
     mem_we, mem_re);
  input clk, rst_n, enable, data_in_valid;
  input [31:0] data_in, mem_rdata;
  input [7:0] ao_status;
  output [31:0] data_out, mem_addr, mem_wdata;
  output data_out_valid, mem_we, mem_re;
  output [7:0] ao_cmd;
  wire clk, rst_n, enable, data_in_valid;
  wire [31:0] data_in, mem_rdata;
  wire [7:0] ao_status;
  wire [31:0] data_out, mem_addr, mem_wdata;
  wire data_out_valid, mem_we, mem_re;
  wire [7:0] ao_cmd;
  assign mem_re = enable;
  assign mem_we = data_out_valid;
  assign mem_wdata[0] = data_out[0];
  assign mem_wdata[1] = data_out[1];
  assign mem_wdata[2] = data_out[2];
  assign mem_wdata[3] = data_out[3];
  assign mem_wdata[4] = data_out[4];
  assign mem_wdata[5] = data_out[5];
  assign mem_wdata[6] = data_out[6];
  assign mem_wdata[7] = data_out[7];
  assign mem_wdata[8] = data_out[8];
  assign mem_wdata[9] = data_out[9];
  assign mem_wdata[10] = data_out[10];
  assign mem_wdata[11] = data_out[11];
  assign mem_wdata[12] = data_out[12];
  assign mem_wdata[13] = data_out[13];
  assign mem_wdata[14] = data_out[14];
  assign mem_wdata[15] = data_out[15];
  assign mem_wdata[16] = data_out[16];
  assign mem_wdata[17] = data_out[17];
  assign mem_wdata[18] = data_out[18];
  assign mem_wdata[19] = data_out[19];
  assign mem_wdata[20] = data_out[20];
  assign mem_wdata[21] = data_out[21];
  assign mem_wdata[22] = data_out[22];
  assign mem_wdata[23] = data_out[23];
  assign mem_wdata[24] = data_out[24];
  assign mem_wdata[25] = data_out[25];
  assign mem_wdata[26] = data_out[26];
  assign mem_wdata[27] = data_out[27];
  assign mem_wdata[28] = data_out[28];
  assign mem_wdata[29] = data_out[29];
  assign mem_wdata[30] = data_out[30];
  assign mem_wdata[31] = data_out[31];
  assign mem_addr[0] = 1'b0;
  assign mem_addr[1] = data_in[1];
  assign mem_addr[2] = data_in[2];
  assign mem_addr[3] = data_in[3];
  assign mem_addr[4] = data_in[4];
  assign mem_addr[5] = data_in[5];
  assign mem_addr[6] = data_in[6];
  assign mem_addr[7] = data_in[7];
  assign mem_addr[8] = data_in[8];
  assign mem_addr[9] = data_in[9];
  assign mem_addr[10] = data_in[10];
  assign mem_addr[11] = data_in[11];
  assign mem_addr[12] = data_in[12];
  assign mem_addr[13] = data_in[13];
  assign mem_addr[14] = data_in[14];
  assign mem_addr[15] = data_in[15];
  assign mem_addr[16] = data_in[16];
  assign mem_addr[17] = data_in[17];
  assign mem_addr[18] = data_in[18];
  assign mem_addr[19] = data_in[19];
  assign mem_addr[20] = data_in[20];
  assign mem_addr[21] = data_in[21];
  assign mem_addr[22] = data_in[22];
  assign mem_addr[23] = data_in[23];
  assign mem_addr[24] = data_in[24];
  assign mem_addr[25] = data_in[25];
  assign mem_addr[26] = data_in[26];
  assign mem_addr[27] = data_in[27];
  assign mem_addr[28] = data_in[28];
  assign mem_addr[29] = data_in[29];
  assign mem_addr[30] = data_in[30];
  assign mem_addr[31] = data_in[31];
  assign ao_cmd[0] = 1'b0;
  assign ao_cmd[1] = 1'b0;
  assign ao_cmd[2] = 1'b0;
  assign ao_cmd[3] = 1'b0;
  assign ao_cmd[4] = 1'b0;
  assign ao_cmd[5] = 1'b0;
  assign ao_cmd[6] = 1'b0;
  assign ao_cmd[7] = 1'b0;
  AND2_X1 g309__2398(.A1 (enable), .A2 (data_in_valid), .ZN
       (data_out_valid));
  AND2_X1 g310__5107(.A1 (enable), .A2 (data_in[30]), .ZN
       (data_out[30]));
  AND2_X1 g311__6260(.A1 (enable), .A2 (data_in[29]), .ZN
       (data_out[29]));
  AND2_X1 g312__4319(.A1 (enable), .A2 (data_in[28]), .ZN
       (data_out[28]));
  AND2_X1 g313__8428(.A1 (enable), .A2 (data_in[27]), .ZN
       (data_out[27]));
  AND2_X1 g314__5526(.A1 (enable), .A2 (data_in[31]), .ZN
       (data_out[31]));
  AND2_X1 g315__6783(.A1 (enable), .A2 (data_in[26]), .ZN
       (data_out[26]));
  AND2_X1 g316__3680(.A1 (enable), .A2 (data_in[25]), .ZN
       (data_out[25]));
  AND2_X1 g317__1617(.A1 (enable), .A2 (data_in[24]), .ZN
       (data_out[24]));
  AND2_X1 g318__2802(.A1 (enable), .A2 (data_in[23]), .ZN
       (data_out[23]));
  AND2_X1 g319__1705(.A1 (enable), .A2 (data_in[22]), .ZN
       (data_out[22]));
  AND2_X1 g320__5122(.A1 (enable), .A2 (data_in[21]), .ZN
       (data_out[21]));
  AND2_X1 g321__8246(.A1 (enable), .A2 (data_in[20]), .ZN
       (data_out[20]));
  AND2_X1 g322__7098(.A1 (enable), .A2 (data_in[19]), .ZN
       (data_out[19]));
  AND2_X1 g323__6131(.A1 (enable), .A2 (data_in[18]), .ZN
       (data_out[18]));
  AND2_X1 g324__1881(.A1 (enable), .A2 (data_in[17]), .ZN
       (data_out[17]));
  AND2_X1 g325__5115(.A1 (enable), .A2 (data_in[16]), .ZN
       (data_out[16]));
  AND2_X1 g326__7482(.A1 (enable), .A2 (data_in[15]), .ZN
       (data_out[15]));
  AND2_X1 g327__4733(.A1 (enable), .A2 (data_in[14]), .ZN
       (data_out[14]));
  AND2_X1 g328__6161(.A1 (enable), .A2 (data_in[13]), .ZN
       (data_out[13]));
  AND2_X1 g329__9315(.A1 (enable), .A2 (data_in[12]), .ZN
       (data_out[12]));
  AND2_X1 g330__9945(.A1 (enable), .A2 (data_in[11]), .ZN
       (data_out[11]));
  AND2_X1 g331__2883(.A1 (enable), .A2 (data_in[10]), .ZN
       (data_out[10]));
  AND2_X1 g332__2346(.A1 (enable), .A2 (data_in[9]), .ZN (data_out[9]));
  AND2_X1 g333__1666(.A1 (enable), .A2 (data_in[8]), .ZN (data_out[8]));
  AND2_X1 g334__7410(.A1 (enable), .A2 (data_in[7]), .ZN (data_out[7]));
  AND2_X1 g335__6417(.A1 (enable), .A2 (data_in[6]), .ZN (data_out[6]));
  AND2_X1 g336__5477(.A1 (enable), .A2 (data_in[5]), .ZN (data_out[5]));
  AND2_X1 g337__2398(.A1 (enable), .A2 (data_in[4]), .ZN (data_out[4]));
  AND2_X1 g338__5107(.A1 (enable), .A2 (data_in[3]), .ZN (data_out[3]));
  AND2_X1 g339__6260(.A1 (enable), .A2 (data_in[2]), .ZN (data_out[2]));
  AND2_X1 g340__4319(.A1 (enable), .A2 (data_in[1]), .ZN (data_out[1]));
  BUF_X1 g341(.A (enable), .Z (data_out[0]));
endmodule

module dsp_block(clk, rst_n, enable, data_in, data_in_valid, data_out,
     data_out_valid);
  input clk, rst_n, enable, data_in_valid;
  input [31:0] data_in;
  output [31:0] data_out;
  output data_out_valid;
  wire clk, rst_n, enable, data_in_valid;
  wire [31:0] data_in;
  wire [31:0] data_out;
  wire data_out_valid;
  wire n_1, n_2, n_3, n_4, n_5, n_6, n_7, n_8;
  wire n_9, n_10, n_11, n_12, n_13, n_14, n_15, n_16;
  wire n_17, n_18, n_19, n_20, n_21, n_22, n_23, n_24;
  wire n_25, n_26, n_27, n_28, n_29, n_30, n_31, n_32;
  assign data_out[0] = 1'b0;
  BUF_X1 g151(.A (enable), .Z (n_10));
  BUF_X1 g160(.A (enable), .Z (n_1));
  BUF_X1 g159(.A (enable), .Z (n_2));
  BUF_X1 g158(.A (enable), .Z (n_3));
  BUF_X1 g157(.A (enable), .Z (n_4));
  BUF_X1 g156(.A (enable), .Z (n_5));
  BUF_X1 g155(.A (enable), .Z (n_6));
  BUF_X1 g154(.A (enable), .Z (n_7));
  BUF_X1 g153(.A (enable), .Z (n_8));
  BUF_X1 g152(.A (enable), .Z (n_9));
  BUF_X1 g150(.A (enable), .Z (n_11));
  BUF_X1 g149(.A (enable), .Z (n_12));
  BUF_X1 g148(.A (enable), .Z (n_13));
  BUF_X1 g147(.A (enable), .Z (n_14));
  BUF_X1 g146(.A (enable), .Z (n_15));
  BUF_X1 g144(.A (enable), .Z (n_17));
  BUF_X1 g143(.A (enable), .Z (n_18));
  BUF_X1 g142(.A (enable), .Z (n_19));
  BUF_X1 g141(.A (enable), .Z (n_20));
  BUF_X1 g140(.A (enable), .Z (n_21));
  BUF_X1 g139(.A (enable), .Z (n_22));
  BUF_X1 g138(.A (enable), .Z (n_23));
  BUF_X1 g137(.A (enable), .Z (n_24));
  BUF_X1 g136(.A (enable), .Z (n_25));
  BUF_X1 g135(.A (enable), .Z (n_26));
  BUF_X1 g134(.A (enable), .Z (n_27));
  BUF_X1 g133(.A (enable), .Z (n_28));
  BUF_X1 g132(.A (enable), .Z (n_29));
  BUF_X1 g129(.A (enable), .Z (n_30));
  BUF_X1 g131(.A (enable), .Z (n_31));
  BUF_X1 g130(.A (enable), .Z (n_32));
  BUF_X1 g145(.A (enable), .Z (n_16));
  AND2_X1 g162__8428(.A1 (n_32), .A2 (data_in_valid), .ZN
       (data_out_valid));
  AND2_X1 g164__5526(.A1 (n_31), .A2 (data_in[29]), .ZN (data_out[30]));
  AND2_X1 g166__6783(.A1 (n_30), .A2 (data_in[30]), .ZN (data_out[31]));
  AND2_X1 g168__3680(.A1 (n_29), .A2 (data_in[28]), .ZN (data_out[29]));
  AND2_X1 g170__1617(.A1 (n_28), .A2 (data_in[27]), .ZN (data_out[28]));
  AND2_X1 g172__2802(.A1 (n_27), .A2 (data_in[26]), .ZN (data_out[27]));
  AND2_X1 g174__1705(.A1 (n_26), .A2 (data_in[25]), .ZN (data_out[26]));
  AND2_X1 g176__5122(.A1 (n_25), .A2 (data_in[24]), .ZN (data_out[25]));
  AND2_X1 g178__8246(.A1 (n_24), .A2 (data_in[23]), .ZN (data_out[24]));
  AND2_X1 g180__7098(.A1 (n_23), .A2 (data_in[22]), .ZN (data_out[23]));
  AND2_X1 g182__6131(.A1 (n_22), .A2 (data_in[21]), .ZN (data_out[22]));
  AND2_X1 g184__1881(.A1 (n_21), .A2 (data_in[20]), .ZN (data_out[21]));
  AND2_X1 g186__5115(.A1 (n_20), .A2 (data_in[19]), .ZN (data_out[20]));
  AND2_X1 g188__7482(.A1 (n_19), .A2 (data_in[18]), .ZN (data_out[19]));
  AND2_X1 g190__4733(.A1 (n_18), .A2 (data_in[17]), .ZN (data_out[18]));
  AND2_X1 g192__6161(.A1 (n_17), .A2 (data_in[16]), .ZN (data_out[17]));
  AND2_X1 g194__9315(.A1 (n_16), .A2 (data_in[15]), .ZN (data_out[16]));
  AND2_X1 g196__9945(.A1 (n_15), .A2 (data_in[14]), .ZN (data_out[15]));
  AND2_X1 g198__2883(.A1 (n_14), .A2 (data_in[13]), .ZN (data_out[14]));
  AND2_X1 g200__2346(.A1 (n_13), .A2 (data_in[12]), .ZN (data_out[13]));
  AND2_X1 g202__1666(.A1 (n_12), .A2 (data_in[11]), .ZN (data_out[12]));
  AND2_X1 g204__7410(.A1 (n_11), .A2 (data_in[10]), .ZN (data_out[11]));
  AND2_X1 g206__6417(.A1 (n_10), .A2 (data_in[9]), .ZN (data_out[10]));
  AND2_X1 g208__5477(.A1 (n_9), .A2 (data_in[8]), .ZN (data_out[9]));
  AND2_X1 g210__2398(.A1 (n_8), .A2 (data_in[7]), .ZN (data_out[8]));
  AND2_X1 g212__5107(.A1 (n_7), .A2 (data_in[6]), .ZN (data_out[7]));
  AND2_X1 g214__6260(.A1 (n_6), .A2 (data_in[5]), .ZN (data_out[6]));
  AND2_X1 g216__4319(.A1 (n_5), .A2 (data_in[4]), .ZN (data_out[5]));
  AND2_X1 g218__8428(.A1 (n_4), .A2 (data_in[3]), .ZN (data_out[4]));
  AND2_X1 g220__5526(.A1 (n_3), .A2 (data_in[2]), .ZN (data_out[3]));
  AND2_X1 g222__6783(.A1 (n_2), .A2 (data_in[1]), .ZN (data_out[2]));
  AND2_X1 g224__3680(.A1 (data_in[0]), .A2 (n_1), .ZN (data_out[1]));
endmodule

module power_controller(clk, rst_n, pwr_cpu_on, pwr_dsp_on, sleep_mode,
     cpu_iso_en, dsp_iso_en, cpu_save, cpu_restore, dsp_save,
     dsp_restore);
  input clk, rst_n, pwr_cpu_on, pwr_dsp_on, sleep_mode;
  output cpu_iso_en, dsp_iso_en, cpu_save, cpu_restore, dsp_save,
       dsp_restore;
  wire clk, rst_n, pwr_cpu_on, pwr_dsp_on, sleep_mode;
  wire cpu_iso_en, dsp_iso_en, cpu_save, cpu_restore, dsp_save,
       dsp_restore;
  wire n_0, n_5, n_6, n_11;
  BUF_X1 g44(.A (pwr_dsp_on), .Z (n_11));
  INV_X1 g43(.A (pwr_cpu_on), .ZN (n_6));
  INV_X1 g42(.A (pwr_dsp_on), .ZN (n_5));
  INV_X1 g41(.A (pwr_dsp_on), .ZN (dsp_iso_en));
  INV_X1 g39(.A (pwr_cpu_on), .ZN (cpu_iso_en));
  CLKBUF_X1 g45(.A (pwr_cpu_on), .Z (n_0));
  NOR2_X1 g62__1617(.A1 (n_5), .A2 (sleep_mode), .ZN (dsp_restore));
  NOR2_X1 g63__2802(.A1 (n_6), .A2 (sleep_mode), .ZN (cpu_restore));
  NOR2_X1 g64__1705(.A1 (n_0), .A2 (sleep_mode), .ZN (cpu_save));
  NOR2_X1 g65__5122(.A1 (n_11), .A2 (sleep_mode), .ZN (dsp_save));
endmodule

module top_soc(clk_main, clk_32k, rst_n, pwr_cpu_on, pwr_dsp_on,
     sleep_mode, cpu_iso_en, dsp_iso_en, cpu_save, cpu_restore,
     dsp_save, dsp_restore, gpio_in, gpio_out, mem_addr, mem_wdata,
     mem_rdata, mem_we, mem_re);
  input clk_main, clk_32k, rst_n, pwr_cpu_on, pwr_dsp_on, sleep_mode;
  input [31:0] gpio_in, mem_rdata;
  output cpu_iso_en, dsp_iso_en, cpu_save, cpu_restore, dsp_save,
       dsp_restore, mem_we, mem_re;
  output [31:0] gpio_out, mem_addr, mem_wdata;
  wire clk_main, clk_32k, rst_n, pwr_cpu_on, pwr_dsp_on, sleep_mode;
  wire [31:0] gpio_in, mem_rdata;
  wire cpu_iso_en, dsp_iso_en, cpu_save, cpu_restore, dsp_save,
       dsp_restore, mem_we, mem_re;
  wire [31:0] gpio_out, mem_addr, mem_wdata;
  wire [31:0] dsp_to_cpu_data;
  wire [31:0] cpu_to_dsp_data;
  wire UNCONNECTED, UNCONNECTED0, UNCONNECTED1, UNCONNECTED2,
       UNCONNECTED3, UNCONNECTED4, UNCONNECTED5, UNCONNECTED6;
  wire UNCONNECTED7, UNCONNECTED8, UNCONNECTED9, UNCONNECTED10,
       UNCONNECTED11, UNCONNECTED12, UNCONNECTED13, UNCONNECTED14;
  wire UNCONNECTED15, UNCONNECTED16, UNCONNECTED_HIER_Z,
       UNCONNECTED_HIER_Z0, cpu_to_dsp_valid, dsp_to_cpu_valid, n_2;
  assign mem_addr[0] = 1'b0;
  always_on_domain u_ao(.clk_32k (clk_32k), .rst_n (rst_n), .sleep_mode
       (sleep_mode), .cpu_cmd (8'b00000000), .cpu_status
       ({UNCONNECTED6, UNCONNECTED5, UNCONNECTED4, UNCONNECTED3,
       UNCONNECTED2, UNCONNECTED1, UNCONNECTED0, UNCONNECTED}),
       .gpio_in (gpio_in), .gpio_out (gpio_out));
  cpu_core u_cpu(.clk (clk_main), .rst_n (rst_n), .enable (pwr_cpu_on),
       .data_out (cpu_to_dsp_data), .data_out_valid (cpu_to_dsp_valid),
       .data_in ({dsp_to_cpu_data[31:1], 1'b0}), .data_in_valid
       (dsp_to_cpu_valid), .ao_cmd ({UNCONNECTED14, UNCONNECTED13,
       UNCONNECTED12, UNCONNECTED11, UNCONNECTED10, UNCONNECTED9,
       UNCONNECTED8, UNCONNECTED7}), .ao_status (8'b00000000),
       .mem_addr ({mem_addr[31:1], UNCONNECTED15}), .mem_wdata
       (mem_wdata), .mem_rdata (mem_rdata), .mem_we (mem_we), .mem_re
       (mem_re));
  dsp_block u_dsp(.clk (clk_main), .rst_n (rst_n), .enable
       (pwr_dsp_on), .data_in (cpu_to_dsp_data), .data_in_valid (n_2),
       .data_out ({dsp_to_cpu_data[31:1], UNCONNECTED16}),
       .data_out_valid (dsp_to_cpu_valid));
  power_controller u_pwr_ctrl(.clk (UNCONNECTED_HIER_Z), .rst_n
       (UNCONNECTED_HIER_Z0), .pwr_cpu_on (pwr_cpu_on), .pwr_dsp_on
       (pwr_dsp_on), .sleep_mode (sleep_mode), .cpu_iso_en
       (cpu_iso_en), .dsp_iso_en (dsp_iso_en), .cpu_save (cpu_save),
       .cpu_restore (cpu_restore), .dsp_save (dsp_save), .dsp_restore
       (dsp_restore));
  CLKBUF_X1 cdn_loop_breaker(.A (cpu_to_dsp_valid), .Z (n_2));
endmodule

